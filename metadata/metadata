#!/usr/bin/env bash
set -e -o pipefail

# Add repo specific metadata here.

PACKAGE_NAME="wireguard-tools"
RELEASE_PACKAGE_NAME="wireguard-tools"
RELEASE_TAG_PACKAGE_NAME="wireguard-tools"
BASE_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"
UPSTREAM_VERSION_CONFIG_KEY="WIREGUARD_VERSION"
UPSTREAM_GIT_REPO="https://git.zx2c4.com/wireguard-tools"
TEST_TYPE="background"
TEST_CONTAINER_TYPE="wireguard"
TEST_CONTAINER_START_WAIT_SECONDS="10"

current_upstream_version() {
    get_config_arg ${UPSTREAM_VERSION_CONFIG_KEY:?}
}

latest_upstream_version() {
    git_remote_repo_latest_tag "${UPSTREAM_GIT_REPO:?}"
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    echo "Updating ${PACKAGE_NAME:?} ${UPSTREAM_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_VERSION_CONFIG_KEY:?}" "${latest_ver:?}"
    git add ${ARGS_FILE:?}
}

package_current_release_version() {
    current_upstream_version
}

test_start_container() {
    local container_name="${1:?}"

    # Wireguard is hard to test without having both the server
    # and the client running and establishing connectivity
    # between them.
    #
    # To keep this test simple, instead we just run a client using
    # a dummy config and then verify if wireguard started the
    # interface on the client correctly.

    local wg_config_dir="$(mktemp -d)"
    local wg_config="${wg_config_dir:?}/wg0.conf"
    local client_private_key=$(docker run --rm ${IMAGE:?} sh -c "wg genkey")
    local server_public_key=$(docker run --rm ${IMAGE:?} sh -c "wg genkey | wg pubkey")
    touch ${wg_config:?}
    echo "[Interface]" >> ${wg_config:?}
    echo "Address = 10.20.30.2" >> ${wg_config:?}
    echo "PrivateKey = ${client_private_key:?}" >> ${wg_config:?}
    echo "ListenPort = 56789" >> ${wg_config:?}
    echo "DNS = 10.20.30.1" >> ${wg_config:?}
    echo "" >> ${wg_config:?}
    echo "[Peer]" >> ${wg_config:?}
    echo "PublicKey = ${server_public_key:?}" >> ${wg_config:?}
    echo "Endpoint = 10.11.12.13:12345" >> ${wg_config:?}
    echo "AllowedIPs = 0.0.0.0/0" >> ${wg_config:?}

    docker run \
        --name ${container_name:?} \
        --detach \
        --rm \
        --cap-add=NET_ADMIN \
        --cap-add=SYS_MODULE \
        --sysctl net.ipv4.conf.all.src_valid_mark=1 \
        --env "WIREGUARD_CONFIG=/configs/wg0.conf" \
        --volume "${wg_config:?}:/configs/wg0.conf:ro" \
        ${IMAGE:?}
    rm -rf ${wg_config_dir:?}
}

test_image_after_container_startup() {
    local container_name="${1:?}"

    # Verify wireguard initialized the wg0 interface as we requested.
    docker exec "${container_name:?}" wg show wg0
}
